{"version":3,"sources":["components/UI/Button/Button.jsx","components/UI/Card/Card.jsx","components/UI/Banner/Banner.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","_jsx","id","className","onClick","disabled","hidden","children","Card","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","correctAnswerMarkUpdate","e","value","answer","onAnsChg","setState","isDisable","onQuesChg","state","_createClass","key","_this2","_jsxs","this","question","options","option1","option2","option3","option4","React","Component","Banner","App","handleAns","questionsCorrect","handleQues","count","isHidden","chgBtn","css","link","btnName","attempt","questionProp","questionId","console","log","BrowserRouter","Routes","Route","path","exact","element","window","location","href","Link","to","pathname","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c967bd78.chunk.js","sourcesContent":["import '../../../index.css';\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst Button = (props)=>{\r\n    \r\n    return(\r\n            <button id={props.id} className={props.className} onClick={props.onClick} disabled={props.disabled} hidden={props.hidden} >{props.children}</button>\r\n        \r\n    )\r\n}\r\n\r\nexport default Button;","import '../../../index.css';\r\nimport Button from '../Button/Button'\r\nimport React from 'react';\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isDisable:false\r\n        }\r\n    }\r\n    correctAnswerMarkUpdate=(e,value)=> {\r\n            if(this.props.answer===value)\r\n            {\r\n                this.props.onAnsChg()\r\n            }\r\n            this.setState({isDisable:true})\r\n            this.props.onQuesChg()\r\n        }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card\">\r\n                <div className=\"main\">\r\n                    <h4 className='question'>{this.props.question}</h4>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <div className=\"options\">\r\n                        <Button className=\"btn\" onClick={e=>this.correctAnswerMarkUpdate(e,this.props.options.option1)} disabled={this.state.isDisable} >{this.props.options.option1}</Button>\r\n                        <Button className=\"btn\" onClick={e=>this.correctAnswerMarkUpdate(e,this.props.options.option2)} disabled={this.state.isDisable}>{this.props.options.option2}</Button>\r\n                        <Button className=\"btn\" onClick={e=>this.correctAnswerMarkUpdate(e,this.props.options.option3)} disabled={this.state.isDisable}>{this.props.options.option3}</Button>\r\n                        <Button className=\"btn\" onClick={e=>this.correctAnswerMarkUpdate(e,this.props.options.option4)} disabled={this.state.isDisable}>{this.props.options.option4}</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","const Banner=(props)=>{\r\n    return(\r\n        <p>{props.children}</p>\r\n    )\r\n}\r\n\r\nexport default Banner;","\n\nimport React from 'react';\nimport './index.css';\nimport Button from './components/UI/Button/Button';\nimport Card  from './components/UI/Card/Card';\nimport Banner from './components/UI/Banner/Banner';\nimport {Route, Routes,Link,BrowserRouter} from 'react-router-dom';\n\n//create class component\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            questionsCorrect: 0,\n            count:0,\n            attempt:0,\n            link:\"/quiz\",\n            css:\"start_btn\",\n            btnName:\"Start Quiz\",\n            isHidden:\"\",\n            questionProp : [\n                {\n                questionId : 1,\n                question : \"What is the father of our nation ?\",\n                option1 : \"Mahatma Gandhi\",\n                option2 : \"Jawaharlal Nehru\",\n                option3 : \"Donald Trump\",\n                option4 : \"Barra Obama\",\n                answer : \"Mahatma Gandhi\"\n                },\n                {\n                questionId : 2,\n                question : \"What color is are the leaves ?\",\n                option1 : \"Blue\",\n                option2 : \"Red\",\n                option3 : \"Yellow\",\n                option4 : \"Green\",\n                answer : \"Green\"\n                },\n                {\n                questionId : 3,\n                question : \"What color is the sky ?\",\n                option1 : \"Blue\",\n                option2 : \"Red\",\n                option3 : \"Yellow\",\n                option4 : \"Green\",\n                answer : \"Blue\"\n                },\n                {\n                questionId : 4,\n                question : \"What is the capital of India ?\",\n                option1 : \"Delhi\",\n                option2 : \"Mumbai\",\n                option3 : \"Kolkata\",\n                option4 : \"Chennai\",\n                answer : \"Delhi\"\n                },\n                {\n                questionId : 5,\n                question : \"What color is the fire ?\",\n                option1 : \"Blue\",\n                option2 : \"Red\",\n                option3 : \"Yellow\",\n                option4 : \"Green\",\n                answer : \"Yellow\"\n                }\n        ],\n        };\n    }\n\n    handleAns=()=> {\n        this.setState({questionsCorrect:this.state.questionsCorrect+1})\n    }\n\n    handleQues=()=>{\n        this.setState({count:this.state.count+1})\n        if(this.state.count===4){\n            this.setState({isHidden:\"\"})\n        }\n    }\n\n    chgBtn=()=>{\n        if(this.state.css===\"start_btn\"){\n            this.setState({css:\"show_btn\",link:\"/result\",btnName:\"Show Results\",isHidden:\"hidden\"})\n        }else if(this.state.link===\"/result\"){\n            this.setState({css:\"start_btn\",link:\"/\",btnName:\"Show Results\",isHidden:\"hidden\"})\n        }\n    }\n\n\n    \n    render() {\n        const mockFunction = 1;\n\n        function redir(){\n            window.location.href = \"/\";\n        }\n\n        console.log(this.btnName);\n        return(\n            <BrowserRouter>\n                <div className=\"main\">\n                    <h1 className=\"title\">Quizz App</h1>\n                    <Routes>\n                        {/* <Route path=\"/\" exact element={} /> */}\n                        <Route path=\"/quiz\" exact element={\n                            <div className=\"quiz\">\n                            <Card \n                                key={this.state.questionProp[0].questionId}\n                                question={this.state.questionProp[0].question}\n                                correctAnswerMarkUpdate={mockFunction}\n                                attempt={mockFunction}\n                                onAnsChg={this.handleAns}\n                                onQuesChg={this.handleQues}\n                                options={{\n                                option1: this.state.questionProp[0].option1,\n                                option2: this.state.questionProp[0].option2,\n                                option3: this.state.questionProp[0].option3,\n                                option4: this.state.questionProp[0].option4,\n                                }}\n                                answer={this.state.questionProp[0].answer}\n                            />\n                            <Card\n                                key={this.state.questionProp[1].questionId}         \n                                question={this.state.questionProp[1].question}\n                                correctAnswerMarkUpdate={mockFunction}\n                                attempt={mockFunction}\n                                onAnsChg={this.handleAns}\n                                onQuesChg={this.handleQues}\n                                options={{\n                                option1: this.state.questionProp[1].option1,\n                                option2: this.state.questionProp[1].option2,\n                                option3: this.state.questionProp[1].option3,\n                                option4: this.state.questionProp[1].option4,\n                                }}\n                                answer={this.state.questionProp[1].answer}\n                            />\n                            <Card   \n                                key={this.state.questionProp[2].questionId}\n                                question={this.state.questionProp[2].question}\n                                correctAnswerMarkUpdate={mockFunction}\n                                attempt={mockFunction}\n                                onAnsChg={this.handleAns}\n                                onQuesChg={this.handleQues}\n                                options={{\n                                option1: this.state.questionProp[2].option1,\n                                option2: this.state.questionProp[2].option2,\n                                option3: this.state.questionProp[2].option3,\n                                option4: this.state.questionProp[2].option4,\n                                }}\n                                answer={this.state.questionProp[2].answer}\n                            />\n                            <Card\n                                key={this.state.questionProp[3].questionId}\n                                question={this.state.questionProp[3].question}\n                                correctAnswerMarkUpdate={mockFunction}\n                                attempt={mockFunction}\n                                onAnsChg={this.handleAns}\n                                onQuesChg={this.handleQues}\n                                options={{\n                                option1: this.state.questionProp[3].option1,\n                                option2: this.state.questionProp[3].option2,\n                                option3: this.state.questionProp[3].option3,\n                                option4: this.state.questionProp[3].option4,\n                                }}\n                                answer={this.state.questionProp[3].answer}\n                            />\n                            <Card\n                                key={this.state.questionProp[4].questionId}\n                                question={this.state.questionProp[4].question}\n                                correctAnswerMarkUpdate={mockFunction}\n                                attempt={mockFunction}\n                                onAnsChg={this.handleAns}\n                                onQuesChg={this.handleQues}\n                                options={{\n                                option1: this.state.questionProp[4].option1,\n                                option2: this.state.questionProp[4].option2,\n                                option3: this.state.questionProp[4].option3,\n                                option4: this.state.questionProp[4].option4,\n                                }}\n                                answer={this.state.questionProp[4].answer}\n                            />\n                        </div>\n                        } />\n                        <Route path=\"/result\" exact element={<div><center><div className='result'><Banner>You have answered {this.state.questionsCorrect}/5 Correctly</Banner></div>\n                            <Button id=\"button\"className={this.state.css} onClick={redir} >Start Quiz</Button></center>\n                            </div>} />\n                    </Routes>\n                    <Link to={{\n                        pathname:this.state.link,\n                        state:{questionsCorrect:this.state.questionsCorrect}\n                    }}><Button id=\"button\"className={this.state.css} onClick={this.chgBtn} hidden={this.state.isHidden} >{this.state.btnName}</Button></Link>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}